---
# tasks file for elastic

 #- debug: var=vars

 - name: update vm_max_map_count
   command: /sbin/sysctl -w vm.max_map_count=400000

 - name: Install Elasticsearch Repo Key
   rpm_key: key=https://packages.elastic.co/GPG-KEY-elasticsearch state=present
   tags: 'elastic-repo'

 - name: Install Elasticsearch Server Repos
   copy: src=elastic.repo dest=/etc/yum.repos.d/elastic.repo
   tags: 'elastic-repo'

 - name: Install Curator Repo
   copy: src=curator.repo dest=/etc/yum.repos.d/curator.repo
   tags: 'elastic-repo'

 - name: Install Java
   yum: name=java-1.8.0-openjdk-headless state=present

 - name: Install Elasticsearch
   yum: name=elasticsearch-5.0.0 state=present

 - name: Create Elasticsearch data directories
   file: path=/mnt/es/data state=directory owner=elasticsearch

 - name: Create Elasticsearch log directories
   file: path=/mnt/es/logs state=directory owner=elasticsearch

 - name: Elasticsearch config file edits
   template: src=elasticsearch.yml.j2 dest=/etc/elasticsearch/elasticsearch.yml

 - name: Ensure elastic environment variables are set.
   blockinfile:
       dest: /etc/sysconfig/elasticsearch
       marker: "# <!-- {mark} ANSIBLE MANAGED BLOCK -->"
       block: |
               MAX_OPEN_FILES=65535
               MAX_LOCKED_MEMORY=unlimited
               ES_JAVA_OPTS="-Xms4g -Xmx4g"

 - name: Start Elasticsearch Service
   service: name=elasticsearch state=restarted enabled=true

 - name: Install Elasticsearch x-pack
   command: /usr/share/elasticsearch/bin/elasticsearch-plugin install x-pack
   ignore_errors: True

 - name: Restart Elasticsearch Service for x-pack
   service: name=elasticsearch state=restarted enabled=true

 - name: Copy consul elasticsearch service definition
   template: src=elasticsearch.service.json.j2 dest=/etc/consul.d/elasticsearch.service.json
 
 - name: Start consul service
   service: name=consul state=restarted enabled=yes
   become: true
 
 - name: Wait for elastic
   wait_for: port=9200 delay=1 timeout=60 host="{{ bind_address }}"
   tags: reg

 - name: Add x-pack license
   copy: src=license.json dest=/tmp 
   tags: test
 
 - name: Install license
   shell: curl -XPUT -u elastic:changeme "http://{{ bind_address }}:9200/_xpack/license" -d @license.json
   args:
     chdir: /tmp
   tags: test

 #- name: Install license
   #shell: curl -XPUT -u elastic:changeme "http://{{ bind_address }}:9200/_xpack/license" -d @license.json 
  # uri:
  #  url: "http://{{ bind_address }}:9200/_xpack/license"
  #  method: PUT
  #  user: elastic
  #  password: changeme
  #  body: "{{ lookup('file', 'license.json') }}"
  #  body_format: json
  #  return_content: yes
  # ignore_errors: true
  # register: output
  # tags: test

 - name: Get password from consul
   uri: url="http://{{ consul_ips[0] }}:8500/v1/kv/{{ customer_id }}/settings/elasticsearch/elastic/password?raw" return_content=true
   register: password
   tags: reg
  
 - name: print pwd
   debug: msg="{{ password }}"
   tags: reg

 - name: copy pwd file
   template: src="pwd.json.j2" dest="/tmp/pwd.json"
   tags: reg

 - name: Update password for elastic user
   shell: curl -XPUT -u elastic:changeme "http://{{ bind_address }}:9200/_xpack/security/user/elastic/_password" -d @pwd.json
   args:
     chdir: "/tmp"
   register: output
   tags: reg

 - name: print output
   debug: var=output
   tags: reg

 - include: curator.yml
   tags: curator
