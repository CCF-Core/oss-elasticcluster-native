eyJhbGciOiJIUzI1NiJ9.I0lmIG1ha2luZyBjaGFuZ2VzIHRvIHRoaXMgZmlsZSwgc2lnbiB0aGUgZmlsZSBhbmQgcHVzaC4KcGlwZWxpbmU6CiAgY2xvbmU6CiAgICBpbWFnZTogcGx1Z2lucy9naXQKICAgIHJlY3Vyc2l2ZTogdHJ1ZQogICAgc3VibW9kdWxlX292ZXJyaWRlOgogICAgICBhbnNpYmxlL3JvbGVzL2Rhc2hib2FyZC9maWxlcy9kYXNoYm9hcmQ6IGh0dHBzOi8vZ2l0aHViLmNvbS9DQ0YtQ29yZS9vc3MtZGFzaGJvYXJkLmdpdAoKICBzY3A6CiAgICBpbWFnZTogY2Nmb3NzL2Ryb25lLXNjcAogICAgc2VydmVyOiAxMC4wLjUuNTIKICAgIHVzZXI6IHJvb3QKICAgIHRhcmdldDogL3RtcC9vc3MtZWxhc3RpYy1jbHVzdGVyLW5hdGl2ZQogICAgI0FkZCBzc2gga2V5IHRvIHNlY3JldHMKICAgICNkcm9uZSBzZWNyZXQgYWRkIC0taW1hZ2UgY2Nmb3NzL2Ryb25lLXNjcCBDQ0YtQ29yZS9vc3MtZWxhc3RpY2NsdXN0ZXItbmF0aXZlICBTU0hfUEtFWSBAL2hvbWUvY2xvdWQtdXNlci8uc3NoL2lkX3JzYQoKICB0ZXN0LWFuc2libGU6CiAgICBpbWFnZTogcGx1Z2lucy9zc2gKICAgIGhvc3Q6IDEwLjAuNS41MgogICAgdXNlcjogY2xvdWQtdXNlcgogICAgcG9ydDogMjIKICAgIHNjcmlwdDoKICAgICAgLSBjZCAvdG1wL29zcy1lbGFzdGljLWNsdXN0ZXItbmF0aXZlL29zcy1lbGFzdGljY2x1c3Rlci1uYXRpdmUvYW5zaWJsZQogICAgICAtIGFuc2libGUtcGxheWJvb2sgb3BlbnN0YWNrLnltbCAtaSBpbnZlbnRvcnkvdXMtdmEvdXMtdmEueW1sIC0tbGlzdC1ob3N0cwoKICB0ZXN0LWNsdXN0ZXI6CiAgICBpbWFnZTogY2Nmb3NzL2Ryb25lLXRlc3QKICAgIGRlZmF1bHRfdGVzdHM6IGVsYXN0aWNzZWFyY2guYmF0cwogICAgZXNfYXBpX2lwX3BvcnQ6IDEwLjAuNS43Njo5MjAwCiAgICBlc191c2VyOiBlbGFzdGljCiAgICBlc19wYXNzd29yZDogY2hhbmdlbWUKCiAgbm90aWZ5OgogICAgaW1hZ2U6IHBsdWdpbnMvc2xhY2sKICAgIGNoYW5uZWw6IGNvcmUtb3NzLXByaXZhdGUKICAgIHVzZXJuYW1lOiBkcm9uZQogICAgdGVtcGxhdGU6ID4KICAgICAgYnVpbGQgI3t7IGJ1aWxkLm51bWJlciB9fSBmaW5pc2hlZCB3aXRoIHt7IGJ1aWxkLnN0YXR1cyB9fSBzdGF0dXMKICAgIHdoZW46CiAgICAgIHN0YXR1czogWyBzdWNjZXNzLCBmYWlsdXJlIF0KICAgICNBZGQgc2VjcmV0CiAgICAjZHJvbmUgc2VjcmV0IGFkZCAtLWltYWdlIHBsdWdpbnMvc2xhY2sgIENDRi1Db3JlL2VsYXN0aWMtY2x1c3Rlci1uYXRpdmUgIFBMVUdJTl9XRUJIT09LICA8d2ViaG9vayB1cmw-.ikfMnLXQ62m5UxBJqwnotus33f00-TShOMqup8UDYiY