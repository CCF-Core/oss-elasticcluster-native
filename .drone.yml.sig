eyJhbGciOiJIUzI1NiJ9.I0lmIG1ha2luZyBjaGFuZ2VzIHRvIHRoaXMgZmlsZSwgc2lnbiB0aGUgZmlsZSBhbmQgcHVzaC4KcGlwZWxpbmU6CiAgY2xvbmU6CiAgICBpbWFnZTogcGx1Z2lucy9naXQKICAgIHJlY3Vyc2l2ZTogdHJ1ZQogICAgc3VibW9kdWxlX292ZXJyaWRlOgogICAgICBhbnNpYmxlL3JvbGVzL2Rhc2hib2FyZC9maWxlcy9kYXNoYm9hcmQ6IGh0dHBzOi8vZ2l0aHViLmNvbS9DQ0YtQ29yZS9vc3MtZGFzaGJvYXJkLmdpdAoKICBzY3A6CiAgICBpbWFnZTogY2Nmb3NzL2Ryb25lLXNjcAogICAgc2VydmVyOiAxMC4wLjUuNTIKICAgIHVzZXI6IHJvb3QKICAgIHRhcmdldDogL3RtcC9vc3MtZWxhc3RpYy1jbHVzdGVyLW5hdGl2ZQogICAgI0FkZCBzc2gga2V5IHRvIHNlY3JldHMKICAgICNkcm9uZSBzZWNyZXQgYWRkIC0taW1hZ2UgY2Nmb3NzL2Ryb25lLXNjcCBDQ0YtQ29yZS9vc3MtZWxhc3RpY2NsdXN0ZXItbmF0aXZlICBTU0hfUEtFWSBAL2hvbWUvY2xvdWQtdXNlci8uc3NoL2lkX3JzYQoKICB0ZXN0LWFuc2libGU6CiAgICBpbWFnZTogcGx1Z2lucy9zc2gKICAgIGhvc3Q6IDEwLjAuNS41MgogICAgdXNlcjogY2xvdWQtdXNlcgogICAgcG9ydDogMjIKICAgIHNjcmlwdDoKICAgICAgLSBjZCAvdG1wL29zcy1lbGFzdGljLWNsdXN0ZXItbmF0aXZlL2Fuc2libGUKICAgICAgLSBhbnNpYmxlLXBsYXlib29rIG9wZW5zdGFjay55bWwgLWkgaW52ZW50b3J5L3VzLXZhL3VzLXZhLnltbCAtLWxpc3QtaG9zdHMKICAgICAgIy0gY3VybCAtcyBodHRwOi8vMTAuMC41LjU0OjkyMDAvX2NsdXN0ZXIvaGVhbHRoP3ByZXR0eSAtdSBlbGFzdGljOmNoYW5nZW1lIHwgZ3JlcCBzdGF0dXMgfCBncmVwIGdyZWVuCgp0ZXN0LWNsdXN0ZXI6CiAgICBpbWFnZTogY2Nmb3NzL2Ryb25lLXRlc3QKICAgICAgZGVmYXVsdF90ZXN0czogZWxhc3RpY3NlYXJjaC5iYXRzCiAgICAgIGVzX2FwaV9pcF9wb3J0OiAxMC4wLjUuNzY6OTIwMAogICAgICBlc191c2VyOiBlbGFzdGljCiAgICAgIGVzX3Bhc3N3b3JkOiBjaGFuZ2VtZQoKICBub3RpZnk6CiAgICBpbWFnZTogcGx1Z2lucy9zbGFjawogICAgY2hhbm5lbDogY29yZS1vc3MtcHJpdmF0ZQogICAgdXNlcm5hbWU6IGRyb25lCiAgICB0ZW1wbGF0ZTogPgogICAgICBidWlsZCAje3sgYnVpbGQubnVtYmVyIH19IGZpbmlzaGVkIHdpdGgge3sgYnVpbGQuc3RhdHVzIH19IHN0YXR1cwogICAgd2hlbjoKICAgICAgc3RhdHVzOiBbIHN1Y2Nlc3MsIGZhaWx1cmUgXQogICAgI0FkZCBzZWNyZXQKICAgICNkcm9uZSBzZWNyZXQgYWRkIC0taW1hZ2UgcGx1Z2lucy9zbGFjayAgQ0NGLUNvcmUvZWxhc3RpYy1jbHVzdGVyLW5hdGl2ZSAgUExVR0lOX1dFQkhPT0sgIDx3ZWJob29rIHVybD4.LBeUe-Un6v9q6rscINjge4ymUQB88_vihDN8CaLM8kM